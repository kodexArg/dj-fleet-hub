services:
  django:
    container_name: django-fleet-hub
    build: .
    volumes:
      - .:/app
      - static_volume:/app/staticfiles
      - media_volume:/app/mediafiles
    depends_on:
      redis:
        condition: service_started
      postgres:
        condition: service_healthy
    expose:
      - "8080"
    env_file:
      - .env
    networks:
      - backend
      - frontend
    command: ["daphne", "-b", "0.0.0.0", "-p", "8080", "--websocket_timeout", "60", "project.asgi:application"]


  postgres:
    container_name: postgres-fleet-hub
    image: postgres:14
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U kodex -d fleet_hub_db"]
      interval: 10s
      timeout: 5s
      retries: 5
    env_file:
      - .env
    networks:
      - backend

  redis:
    container_name: redis-fleet-hub
    image: redis:alpine
    ports:
      - "6379:6379"
    env_file:
      - .env
    networks:
      - backend

  nginx:
    container_name: nginx-fleet-hub
    image: nginx:1.25.2
    depends_on:
      - django
    ports:
      - "80:80"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - static_volume:/staticfiles
      - media_volume:/mediafiles
    networks:
      - frontend

volumes:
  static_volume:
  media_volume:
  postgres-data:

networks:
  frontend:
    driver: bridge
  backend:
    driver: bridge
